1. Create Database & Table
CREATE DATABASE IF NOT EXISTS inventory_forecasting;
USE inventory_forecasting;

2. Insert Data 
CREATE TABLE inventory_data (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id VARCHAR(50),
    product_name VARCHAR(100),
    category VARCHAR(50),
    date DATE,
    sales INT,
    stock_level INT,
    supplier VARCHAR(50)
);

INSERT INTO inventory_data (product_id, product_name, category, date, sales, stock_level, supplier)
VALUES 
('P001', 'Laptop', 'Electronics', '2024-02-25', 50, 200, 'Supplier A'),
('P002', 'Smartphone', 'Electronics', '2024-02-25', 80, 150, 'Supplier B');

3. Retrieve Data
Get the last 10 sales records
SELECT * FROM inventory_data 
ORDER BY date DESC 
LIMIT 10;

Get sales trends for a specific product
SELECT date, SUM(sales) AS total_sales 
FROM inventory_data 
WHERE product_id = 'P001'
GROUP BY date 
ORDER BY date ASC;

Get total sales by category
SELECT category, SUM(sales) AS total_sales 
FROM inventory_data 
GROUP BY category 
ORDER BY total_sales DESC;

4. Inventory Management
Check low-stock products
SELECT product_name, stock_level 
FROM inventory_data 
WHERE stock_level < 50;

Forecast reorder point (Assumption: reorder if stock < 30% of average sales)
SELECT product_name, stock_level, (SUM(sales) / COUNT(DISTINCT date)) * 0.3 AS reorder_point
FROM inventory_data
GROUP BY product_name, stock_level
HAVING stock_level < reorder_point;

5. Identify Best-Selling Products
SELECT product_name, SUM(sales) AS total_sales 
FROM inventory_data 
GROUP BY product_name 
ORDER BY total_sales DESC 
LIMIT 5;

